"use client";
import React, { useState } from "react";
import { Button } from "@/components/ui/button";
import {
  Card,
  CardContent,
  CardDescription,
  CardHeader,
  CardTitle,
} from "@/components/ui/card";
import { Input } from "@/components/ui/input";
import { Label } from "@/components/ui/label";
import { Avatar, AvatarFallback, AvatarImage } from "@/components/ui/avatar";
import { Badge } from "@/components/ui/badge";
import {
  Bell,
  Calendar,
  Cake,
  Gift,
  PartyPopper,
  Users,
  Plus,
  Trash2,
} from "lucide-react";

const HomePage = () => {
  const [birthdays, setBirthdays] = useState([
    { id: 1, name: "Emma Johnson", date: "1995-08-15", daysUntil: 12, age: 29 },
    { id: 2, name: "Michael Chen", date: "1990-09-22", daysUntil: 30, age: 34 },
    {
      id: 3,
      name: "Sarah Williams",
      date: "1988-10-05",
      daysUntil: 43,
      age: 36,
    },
    { id: 4, name: "James Wilson", date: "1992-07-30", daysUntil: -1, age: 32 },
    {
      id: 5,
      name: "Sophia Rodriguez",
      date: "1998-08-28",
      daysUntil: 25,
      age: 26,
    },
  ]);

  const [newBirthday, setNewBirthday] = useState({ name: "", date: "" });
  const [showForm, setShowForm] = useState(false);

  const addBirthday = () => {
    if (newBirthday.name && newBirthday.date) {
      const birthDate = new Date(newBirthday.date);
      const today = new Date();
      const nextBirthday = new Date(
        today.getFullYear(),
        birthDate.getMonth(),
        birthDate.getDate()
      );

      if (nextBirthday < today) {
        nextBirthday.setFullYear(nextBirthday.getFullYear() + 1);
      }

      const daysUntil = Math.floor(
        (nextBirthday - today) / (1000 * 60 * 60 * 24)
      );
      const age = today.getFullYear() - birthDate.getFullYear();

      setBirthdays([
        ...birthdays,
        {
          id: birthdays.length + 1,
          name: newBirthday.name,
          date: newBirthday.date,
          daysUntil,
          age,
        },
      ]);

      setNewBirthday({ name: "", date: "" });
      setShowForm(false);
    }
  };

  const deleteBirthday = (id) => {
    setBirthdays(birthdays.filter((birthday) => birthday.id !== id));
  };

  const getGradient = (daysUntil) => {
    if (daysUntil === 0) return "from-pink-500 to-yellow-500";
    if (daysUntil <= 7) return "from-purple-500 to-pink-500";
    return "from-blue-400 to-purple-500";
  };

  const getStatus = (daysUntil) => {
    if (daysUntil === 0) return "Today! 🎉";
    if (daysUntil === 1) return "Tomorrow!";
    if (daysUntil < 0) return "Passed";
    return `In ${daysUntil} days`;
  };

  return (
    <div className="min-h-screen bg-gradient-to-br from-purple-50 via-blue-50 to-pink-50 dark:from-purple-900 dark:via-blue-900 dark:to-gray-900">
      {/* Navigation */}
      <nav className="flex items-center justify-between p-6">
        <div className="flex items-center space-x-2">
          <div className="p-2 bg-gradient-to-r from-pink-500 to-yellow-500 rounded-full">
            <Cake className="h-6 w-6 text-white" />
          </div>
          <span className="text-xl font-bold bg-gradient-to-r from-pink-600 to-yellow-600 bg-clip-text text-transparent">
            Birthday Reminder
          </span>
        </div>
        <div className="hidden md:flex space-x-6">
          <a
            href="#"
            className="text-sm font-medium hover:text-pink-600 transition-colors flex items-center"
          >
            <Calendar className="h-4 w-4 mr-1" /> Calendar
          </a>
          <a
            href="#"
            className="text-sm font-medium hover:text-pink-600 transition-colors flex items-center"
          >
            <Gift className="h-4 w-4 mr-1" /> Gifts
          </a>
          <a
            href="#"
            className="text-sm font-medium hover:text-pink-600 transition-colors flex items-center"
          >
            <Users className="h-4 w-4 mr-1" /> Friends
          </a>
        </div>
        <div className="flex items-center space-x-4">
          <Button variant="outline" className="flex items-center">
            <Bell className="h-4 w-4 mr-2" /> Reminders
          </Button>
          <Button className="bg-gradient-to-r from-pink-500 to-yellow-500 flex items-center">
            <Plus className="h-4 w-4 mr-2" /> Add Birthday
          </Button>
        </div>
      </nav>

      {/* Hero Section */}
      <section className="container mx-auto px-6 py-10 flex flex-col items-center text-center">
        <Badge
          variant="outline"
          className="mb-6 py-2 px-4 text-sm font-semibold bg-white"
        >
          <PartyPopper className="h-4 w-4 mr-1 text-yellow-500" /> Celebrate
          Special Moments
        </Badge>
        <h1 className="text-4xl md:text-6xl font-bold tracking-tight mb-6">
          Never Miss a{" "}
          <span className="bg-gradient-to-r from-pink-600 to-yellow-600 bg-clip-text text-transparent">
            Birthday
          </span>
        </h1>
        <p className="text-xl text-muted-foreground max-w-2xl mb-10">
          Keep track of all your loved one`s birthdays and celebrate them in
          style with personalized reminders and gift ideas.
        </p>

        <div className="flex flex-col sm:flex-row gap-4 mb-16">
          <Button
            size="lg"
            className="px-8 bg-gradient-to-r from-pink-500 to-yellow-500"
          >
            <Plus className="h-5 w-5 mr-2" /> Add Birthday
          </Button>
          <Button size="lg" variant="outline" className="px-8">
            <Gift className="h-5 w-5 mr-2" /> Gift Ideas
          </Button>
        </div>
      </section>

      {/* Birthday List Section */}
      <section className="container mx-auto px-6 pb-16">
        <div className="flex justify-between items-center mb-8">
          <h2 className="text-3xl font-bold">Upcoming Birthdays</h2>
          <Badge variant="outline" className="text-sm">
            {birthdays.filter((b) => b.daysUntil >= 0).length} upcoming
          </Badge>
        </div>

        <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
          {birthdays.map((birthday) => (
            <Card
              key={birthday.id}
              className={`overflow-hidden border-0 shadow-lg bg-gradient-to-br ${getGradient(
                birthday.daysUntil
              )} text-white`}
            >
              <CardHeader className="pb-3">
                <div className="flex justify-between items-start">
                  <div>
                    <CardTitle className="text-2xl">{birthday.name}</CardTitle>
                    <CardDescription className="text-white/80">
                      Turning {birthday.age} years old
                    </CardDescription>
                  </div>
                  <Button
                    variant="ghost"
                    size="icon"
                    className="h-8 w-8 text-white/80 hover:text-white hover:bg-white/20"
                    onClick={() => deleteBirthday(birthday.id)}
                  >
                    <Trash2 className="h-4 w-4" />
                  </Button>
                </div>
              </CardHeader>
              <CardContent>
                <div className="flex justify-between items-center">
                  <div className="flex items-center">
                    <Calendar className="h-5 w-5 mr-2" />
                    <span>
                      {new Date(birthday.date).toLocaleDateString("en-US", {
                        month: "long",
                        day: "numeric",
                      })}
                    </span>
                  </div>
                  <Badge
                    variant={birthday.daysUntil === 0 ? "default" : "secondary"}
                    className={
                      birthday.daysUntil === 0
                        ? "bg-white text-pink-600"
                        : "bg-white/20"
                    }
                  >
                    {getStatus(birthday.daysUntil)}
                  </Badge>
                </div>

                {birthday.daysUntil === 0 && (
                  <div className="mt-4 p-3 bg-white/20 rounded-lg flex items-center">
                    <PartyPopper className="h-5 w-5 mr-2 text-yellow-300" />
                    <span className="text-sm">
                      It`s their birthday today! Send wishes now!
                    </span>
                  </div>
                )}

                {birthday.daysUntil > 0 && birthday.daysUntil <= 7 && (
                  <div className="mt-4 p-3 bg-white/20 rounded-lg flex items-center">
                    <Bell className="h-5 w-5 mr-2 text-yellow-300" />
                    <span className="text-sm">
                      Coming up soon! Time to plan a surprise!
                    </span>
                  </div>
                )}
              </CardContent>
            </Card>
          ))}
        </div>
      </section>

      {/* Add Birthday Form */}
      <section className="container mx-auto px-6 pb-16">
        <Card className="max-w-2xl mx-auto">
          <CardHeader>
            <CardTitle className="text-2xl flex items-center">
              <Plus className="h-5 w-5 mr-2" /> Add New Birthday
            </CardTitle>
            <CardDescription>
              Add a friend or family member to your birthday reminder list
            </CardDescription>
          </CardHeader>
          <CardContent className="space-y-4">
            <div className="space-y-2">
              <Label htmlFor="name">Full Name</Label>
              <Input
                id="name"
                placeholder="Enter full name"
                value={newBirthday.name}
                onChange={(e) =>
                  setNewBirthday({ ...newBirthday, name: e.target.value })
                }
              />
            </div>
            <div className="space-y-2">
              <Label htmlFor="date">Birthdate</Label>
              <Input
                id="date"
                type="date"
                value={newBirthday.date}
                onChange={(e) =>
                  setNewBirthday({ ...newBirthday, date: e.target.value })
                }
              />
            </div>
            <Button
              className="w-full bg-gradient-to-r from-pink-500 to-yellow-500"
              onClick={addBirthday}
            >
              Add Birthday
            </Button>
          </CardContent>
        </Card>
      </section>

      {/* Celebration Section */}
      <section className="bg-gradient-to-r from-pink-600 to-yellow-600 text-white py-16">
        <div className="container mx-auto px-6 text-center">
          <PartyPopper className="h-12 w-12 mx-auto mb-6" />
          <h2 className="text-3xl md:text-4xl font-bold mb-6">
            Celebrate Every Moment
          </h2>
          <p className="text-pink-100 max-w-2xl mx-auto mb-10">
            Make every birthday special with personalized reminders, gift
            suggestions, and celebration ideas.
          </p>
          <div className="grid grid-cols-1 md:grid-cols-3 gap-8 max-w-4xl mx-auto">
            <div className="flex flex-col items-center p-6 bg-white/10 rounded-lg backdrop-blur-sm">
              <Bell className="h-10 w-10 mb-4 text-yellow-300" />
              <h3 className="font-semibold mb-2">Smart Reminders</h3>
              <p className="text-sm">
                Get notified before birthdays so you`re always prepared
              </p>
            </div>
            <div className="flex flex-col items-center p-6 bg-white/10 rounded-lg backdrop-blur-sm">
              <Gift className="h-10 w-10 mb-4 text-yellow-300" />
              <h3 className="font-semibold mb-2">Gift Ideas</h3>
              <p className="text-sm">
                Personalized gift recommendations based on interests
              </p>
            </div>
            <div className="flex flex-col items-center p-6 bg-white/10 rounded-lg backdrop-blur-sm">
              <Calendar className="h-10 w-10 mb-4 text-yellow-300" />
              <h3 className="font-semibold mb-2">Event Planning</h3>
              <p className="text-sm">
                Plan parties and celebrations with our tools
              </p>
            </div>
          </div>
        </div>
      </section>

      {/* Footer */}
      <footer className="bg-slate-100 dark:bg-slate-900 py-12">
        <div className="container mx-auto px-6">
          <div className="grid grid-cols-1 md:grid-cols-4 gap-8">
            <div>
              <div className="flex items-center space-x-2 mb-4">
                <Cake className="h-6 w-6 text-pink-600" />
                <span className="font-semibold">Birthday Reminder</span>
              </div>
              <p className="text-sm text-muted-foreground">
                Never forget a special day again. Celebrate every birthday with
                joy.
              </p>
            </div>
            <div>
              <h3 className="font-semibold mb-4">Features</h3>
              <ul className="space-y-2 text-sm text-muted-foreground">
                <li>
                  <a href="#" className="hover:text-pink-600">
                    Reminders
                  </a>
                </li>
                <li>
                  <a href="#" className="hover:text-pink-600">
                    Gift Suggestions
                  </a>
                </li>
                <li>
                  <a href="#" className="hover:text-pink-600">
                    Event Planning
                  </a>
                </li>
              </ul>
            </div>
            <div>
              <h3 className="font-semibold mb-4">Resources</h3>
              <ul className="space-y-2 text-sm text-muted-foreground">
                <li>
                  <a href="#" className="hover:text-pink-600">
                    Blog
                  </a>
                </li>
                <li>
                  <a href="#" className="hover:text-pink-600">
                    Tutorials
                  </a>
                </li>
                <li>
                  <a href="#" className="hover:text-pink-600">
                    Support
                  </a>
                </li>
              </ul>
            </div>
            <div>
              <h3 className="font-semibold mb-4">Company</h3>
              <ul className="space-y-2 text-sm text-muted-foreground">
                <li>
                  <a href="#" className="hover:text-pink-600">
                    About
                  </a>
                </li>
                <li>
                  <a href="#" className="hover:text-pink-600">
                    Contact
                  </a>
                </li>
                <li>
                  <a href="#" className="hover:text-pink-600">
                    Privacy
                  </a>
                </li>
              </ul>
            </div>
          </div>
          <div className="border-t mt-12 pt-8 text-center text-sm text-muted-foreground">
            <p>
              © {new Date().getFullYear()} Birthday Reminder. Made with ❤️ and
              🎂
            </p>
          </div>
        </div>
      </footer>
    </div>
  );
};

export default HomePage;
